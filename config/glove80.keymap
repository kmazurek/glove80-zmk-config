/*                               GLOVE80 KEY MATRIX / LAYOUT MAPPING
 ╭────────────────────╮       ╭────────────────────╮ ╭────────────────────╮       ╭────────────────────╮
 │  0   1   2   3   4 ╰───┬───╯  5   6   7   8   9 │ │ LC5 LC4 LC3 LC2 LC1╰───┬───╯ RC1 RC2 RC3 RC4 RC5│
 │ 10  11  12  13  14  15 │ 16  17  18  19  20  21 │ │ LN5 LN4 LN3 LN2 LN1 LN0│ RN0 RN1 RN2 RN3 RN4 RN5│
 │ 22  23  24  25  26  27 │ 28  29  30  31  32  33 │ │ LT5 LT4 LT3 LT2 LT1 LT0│ RT0 RT1 RT2 RT3 RT4 RT5│
 │ 34  35  36  37  38  39 │ 40  41  42  43  44  45 │ │ LM5 LM4 LM3 LM2 LM1 LM0│ RM0 RM1 RM2 RM3 RM4 RM5│
 │ 46  47  48  49  50  51 │ 58  59  60  61  62  63 │ │ LB5 LB4 LB3 LB2 LB1 LB0│ RB0 RB1 RB2 RB3 RB4 RB5│
 │ 64  65  66  67  68 ╭───┴───╮ 75  76  77  78  79 │ │ LF5 LF4 LF3 LF2 LF1╭───┴───╮ RF1 RF2 RF3 RF4 RF5│
 ╰───────────┬────────┴───┬───┴────────┬───────────╯ ╰───────────┬────────┴───┬───┴────────┬───────────╯
             │ 52  53  54 │ 55  56  57 │                         │ LH5 LH4 LH3│ RH3 RH4 RH5│
             │ 69  70  71 │ 72  73  74 │                         │ LH2 LH1 LH0│ RH0 RH1 RH2│
             ╰────────────┴────────────╯                         ╰────────────┴────────────╯
 */
#include "../zmk-nodefree-config/keypos_def/keypos_glv80.h"

/* source ZMK helpers */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* additional ZMK dependencies */
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include "../zmk-nodefree-config/helper.h"

// layers
#define DEF 0
#define SYM 1
#define NUM 2
#define SYS 3
#define EMPTY 4

#define XXX &none
#define ___ &trans

/* Global settings */

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

#define KEYS_L LC1 LC2 LC3 LC4 LC5 LN0 LN1 LN2 LN3 LN4 LN5 LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 LF1 LF2 LF3 LF4 LF5  // left hand
#define KEYS_R RC1 RC2 RC3 RC4 RC5 RN0 RN1 RN2 RN3 RN4 RN5 RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 RF1 RF2 RF3 RF4 RF5  // right hand
#define THUMBS LH5 LH4 LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3 RH4 RH5                                                                                          // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <250>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <100>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift
ZMK_BEHAVIOR(smart_shft, mod_morph,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
// Bluetooth macros
ZMK_BEHAVIOR(bt_0, macro,
    bindings = <&out OUT_BLE>
             , <&bt BT_SEL 0>;
)
ZMK_BEHAVIOR(bt_1, macro,
    bindings = <&out OUT_BLE>
             , <&bt BT_SEL 1>;
)
ZMK_BEHAVIOR(bt_2, macro,
    bindings = <&out OUT_BLE>
             , <&bt BT_SEL 2>;
)
ZMK_BEHAVIOR(bt_3, macro,
    bindings = <&out OUT_BLE>
             , <&bt BT_SEL 3>;
)
ZMK_BEHAVIOR(bt_4, macro,
    bindings = <&out OUT_BLE>
             , <&bt BT_SEL 4>;
)

// RGB status macro
ZMK_BEHAVIOR(rgb_ug_status, macro,
    bindings = <&rgb_ug RGB_STATUS>;
)

/* Keymap */

ZMK_CONDITIONAL_LAYER(SYM NUM, SYS)  // SYM + NUM --> SYS
//
ZMK_LAYER(base,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6           &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp ESC       &kp Q         &kp W         &kp E         &kp R         &kp T            &kp Y         &kp U         &kp I         &kp O         &kp P         &kp TAB
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp BSPC      &hml LCTRL A  &hml LSHFT S  &hml LGUI D   &hml LALT F   &kp G            &kp H         &hmr LALT J   &hmr LGUI K   &hmr LSHFT L  &hmr LCTRL SEMI &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &smart_shft   &kp Z         &kp X         &kp C         &kp V         &kp B            &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &smart_shft
// ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┤
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                              ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
//                                           ╭─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────╮
                                              &kp SPACE     &kp RALT      ___              ___           &kp RALT      &kp ENTER
//                                           ├─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┤
                                              &sl SYM       ___           ___              ___           ___           &sl NUM
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(sym,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT      &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR      &kp GRAVE
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           &kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT      &kp BSLH
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           &kp UNDER     &kp PLUS      &kp LBRC      &kp RBRC      ___
// ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┤
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                              ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
//                                           ╭─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────╮
                                              ___           ___           ___              ___           ___           ___
//                                           ├─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┤
                                              ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(num,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           &kp N7        &kp N8        &kp N9        ___              &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp N0        &kp N4        &kp N5        &kp N6        ___              &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           &kp N1        &kp N2        &kp N3        ___              ___           ___           ___           ___           ___           ___
// ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┤
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                              ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
//                                           ╭─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────╮
                                              ___           ___           ___              ___           ___           ___
//                                           ├─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┤
                                              ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(sys,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &bt BT_CLR    &bt_0         &bt_1         &bt_2         &bt_3         &bt_4            ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┤
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                              ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
//                                           ╭─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────╮
                                              ___           ___           ___              ___           ___           ___
//                                           ├─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┤
                                              ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(empty,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────┤
    ___           ___           ___           ___           ___                                          ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯                              ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
//                                           ╭─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────╮
                                              ___           ___           ___              ___           ___           ___
//                                           ├─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┤
                                              ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

/* vim: set ft=c tw=174: */
